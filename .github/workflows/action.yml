name: Build 

on:
    pull_request:
        branches:
            - master
        types: closed


jobs:
    build:
      permissions:
        contents: write
      strategy:
        matrix:
          os: [macos-latest, ubuntu-latest, windows-latest]
          ui: [cui,gui]
  
      runs-on: ${{ matrix.os }}
  
      steps:
        - name: Check-out repository
          uses: actions/checkout@v3
  
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11' 

        - name: Build cui
          uses: Nuitka/Nuitka-Action@main
          if: ${{ matrix.ui == 'cui' }}
          with:
            nuitka-version: main
            script-name: KindleUnpack.py
            onefile: true
            standalone: true
            output-file: kindleunpack-${{ matrix.os }}-cui
        
        - name: Build gui
          if: ${{ matrix.ui == 'gui' }}
          uses: Nuitka/Nuitka-Action@main
          with:
            nuitka-version: main
            script-name: KindleUnpack.pyw
            onefile: true
            standalone: true
            enable-plugins: tk-inter
            output-file: kindleunpack-${{ matrix.os }}-gui
  
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: ${{ runner.os }} Build
            path: |
              build/*.exe
              build/kindleunpack-${{ matrix.os }}-gui
              build/kindleunpack-${{ matrix.os }}-cui
      
        - name: check build
          if: ${{matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
          run: |
            ls -l build
         
        - name: Cut a new release
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{ github.event.pull_request.title }}
            generate_release_notes: true
            files: |
              build/*.exe
              build/kindleunpack-${{ matrix.os }}-gui
              build/kindleunpack-${{ matrix.os }}-cui
